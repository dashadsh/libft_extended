# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: dgoremyk <dgoremyk@student.42wolfsburg.    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/05/17 17:22:34 by dgoremyk          #+#    #+#              #
#    Updated: 2023/04/14 11:44:37 by dgoremyk         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

.SILENT:

NAME = libft.a

CC = gcc

CFLAGS = -Wall -Werror -Wextra -g

RM = rm -f

SRCS = ft_atoi.c \
ft_bzero.c \
ft_calloc.c \
ft_isalnum.c \
ft_isalpha.c \
ft_isascii.c \
ft_isdigit.c \
ft_isprint.c \
ft_itoa.c \
ft_memchr.c \
ft_memcmp.c \
ft_memcpy.c \
ft_memmove.c \
ft_memset.c \
ft_printf/ft_printf.c \
ft_printf/ft_write_char.c \
ft_printf/ft_write_hex.c \
ft_printf/ft_write_hex_upper.c \
ft_printf/ft_write_nbr.c \
ft_printf/ft_write_ptr.c \
ft_printf/ft_write_str.c \
ft_printf/ft_write_unsigned_int.c \
ft_putchar_fd.c \
ft_putendl_fd.c \
ft_putnbr_fd.c \
ft_putstr_fd.c \
ft_split.c \
ft_strchr.c \
ft_strdup.c \
ft_striteri.c \
ft_strjoin.c \
ft_strlcat.c \
ft_strlcpy.c \
ft_strlen.c \
ft_strmapi.c \
ft_strncat.c \
ft_strncmp.c \
ft_strcpy.c \
ft_strnstr.c \
ft_strncpy.c \
ft_strrchr.c \
ft_strtrim.c \
ft_substr.c \
get_next_line/get_next_line.c \
get_next_line/get_next_line_utils.c \
ft_tolower.c \
ft_toupper.c \

BONUS_SRCS = ft_lstadd_back.c \
ft_lstadd_front.c \
ft_lstclear.c \
ft_lstdelone.c \
ft_lstiter.c \
ft_lstlast.c \
ft_lstmap.c \
ft_lstnew.c \
ft_lstsize.c \
			
# Substitution reference
# https://www.gnu.org/software/make/manual/make.html#Substitution-Refs			
OBJS = $(SRCS:.c=.o)

BONUS_OBJS = $(BONUS_SRCS:.c=.o)

# This command creates a static library named 'libft.a' 
# and puts copies of the object files in it.
# 1. NAME is target (usually the name of a file that is generated by a program).
# 2. OBJS is a prerequisite (file that is used as input to create the target).
# 3. ar rcs $(NAME) $(OBJS) is a recipe (an action that make carries out).
all: $(NAME)

$(NAME): $(OBJS) $(BONUS_OBJS)
	ar rcs $(NAME) $(BONUS_OBJS)
	ar rcs $(NAME) $(OBJS)
	
# bonus: $(BONUS_OBJS)
# 	ar rcs $(NAME) $(BONUS_OBJS)
	
# Define a pattern rule that compiles every .c file into a .o file
# https://www.gnu.org/software/make/manual/make.html#Pattern-Match
#%.o: %.c
#	$(CC) -c $(CFLAGS) $< -o $@
#or
#	$(CC) $(CFLAGS) -c -o $@ $<

clean:
	$(RM) $(OBJS) $(BONUS_OBJS)

fclean: clean
	$(RM) $(NAME)

re: fclean all

# There are two reasons to use a phony target: 
# to avoid a conflict with a file of the same name, and to improve performance.
# https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html
.PHONY: all clean fclean re